element Vertex end
element Edge end

% const edges : edgeset{Edge}(Vertex,Vertex) = load ("../test/graphs/socLive.wel");
const edges : edgeset{Edge}(Vertex,Vertex) = load ("../test/graphs/test.el");

const vertices : vertexset{Vertex} = edges.getVertices();

const parent : vector{Vertex}(int) = -1;

func updateEdge(src : Vertex, dst : Vertex) -> output : bool
    parent[dst] = src;
    output = true;
end

func toFilter(v : Vertex) -> output : bool
    output =  parent[v] == -1;
end


func main()

    startTimer();
    var frontier : vertexset{Vertex} = new vertexset{Vertex}(0);
    frontier.addVertex(1);

    while (frontier.getVertexSetSize() != 0)
        print "number of active_vertices: ";
        print frontier.getVertexSetSize();
        frontier = edges.from(frontier).to(toFilter).apply(updateEdge);
    end

    var elapsed_time : float = stopTimer();
    print "elapsed time: ";
    print elapsed_time;

end