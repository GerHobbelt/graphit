element Vertex end
element Edge end

const edges : edgeset{Edge}(Vertex, Vertex) = load ("../../test/graphs/test.el");
const vertices : vertexset{Vertex} = edges.getVertices();
const checked : vector{Vertex}(int) = -1;

func updateEdge(src : Vertex, dst : Vertex)
     checked[dst] = checked[src] + 1;
end

func toFilter(v : Vertex) -> output : bool
     output = checked[v] == -1;
end

func main()

	    checked[1] = 0;

        var frontier : vertexset{Vertex} = new vertexset{Vertex}(0);

        frontier.addVertex(1);
        while (frontier.getVertexSetSize() != 0)

             #s1# var output : vertexset{Vertex} = edges.from(frontier).to(toFilter).applyModified(updateEdge, checked);
             delete frontier;
             frontier = output;

        end
        delete frontier;

        var notConnected : vertexset{Vertex} = vertices.filter(toFilter);

        var amountNotConnected : int = notConnected.getVertexSetSize();

        var sum : int = checked.sum();

        sum = sum + amountNotConnected;

end